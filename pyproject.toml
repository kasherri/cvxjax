[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cvxjax"
version = "0.1.0"
description = "JAX-native convex optimization library"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "CVXJAX Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.10"
dependencies = [
    "jax>=0.4.20",
    "jaxlib>=0.4.20",
    "jaxopt>=0.8.3",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "typing_extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
    "mypy>=1.6.0",
]
notebook = [
    "jupyter>=1.0.0",
    "matplotlib>=3.7.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/cvxjax/cvxjax"
Documentation = "https://cvxjax.readthedocs.io"
Repository = "https://github.com/cvxjax/cvxjax"
Issues = "https://github.com/cvxjax/cvxjax/issues"

[tool.hatch.build.targets.wheel]
packages = ["cvxjax"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.ruff.lint.isort]
known-first-party = ["cvxjax"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]

[tool.coverage.run]
source = ["cvxjax"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "jaxopt.*",
    "scipy.*",
]
ignore_missing_imports = true
